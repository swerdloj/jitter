// NOTE: This file serves as a continuous feature-integration test.
// As new functionality is added to the compiler, this file
// will grow to test that functionality.

// TODO: static, const, @ tags
// TODO: Implement and test out hot-reloading
// @persistent
// static mut TEST: u32 = 0;

// trait Trait {
//     fn test(&self) -> u8;
// }

// TODO: Trait impls
// impl Trait for Test {
//     fn test(&self) -> u8 { 
//         self.a
//     }
// }

// TODO: Type impls
// impl Test {
//     fn add_one(&mut self) {
//         self.a += 1;
//         self.b += 1;
//         self.c += 1;
//     }
// }

// TODO: structs
// fn structs(a: Test) -> Test {
//     let mut test = Test {
//         a: 1,
//         b: 2,
//         c: 3,
//     };

//     test.b = 7;
//     test.add_one();

//     return test;
// }

// TODO: Operators
// fn multiply(a: i32, b: i32) -> i32 {
//     a * b
// }

struct Test {
    a: u8,
    b: u16,
    c: u64,
}

fn negate(a: i32) -> i32 {
    // immediate type inferrence
    let x = -a;

    // Implicit returns
    x
}

fn identity(a: u32) -> u32 {
    a
}

// TODO: Infer literal types
// fn return_12i32() -> i32 {
//     return 12;
// }